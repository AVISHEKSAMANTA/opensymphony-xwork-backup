<project name="xwork" default="jar" basedir=".">
    <!-- overridden properties (must be before the import!) -->
    <property name="src.test" value="src/test"/>

    <import file="osbuild.xml"/>

    <path id="junit-tiger.cp">
        <fileset dir="lib">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
            <exclude name="**/jalopy/**"/>
        </fileset>
        <pathelement location="${build.java}"/>
        <pathelement location="tiger/build/java"/>
        <pathelement location="tiger/build/test"/>
        <pathelement location="tiger/build/java-test"/>
    </path>

    <target name="init" depends="common.init" unless="skip.ivy">
        <taskdef name="ivy-configure" classname="fr.jayasoft.ivy.ant.IvyConfigure"/>
        <taskdef name="ivy-resolve" classname="fr.jayasoft.ivy.ant.IvyResolve"/>
        <taskdef name="ivy-retrieve" classname="fr.jayasoft.ivy.ant.IvyRetrieve"/>
        <taskdef name="ivy-publish" classname="fr.jayasoft.ivy.ant.IvyPublish"/>
        <taskdef name="ivy-report" classname="fr.jayasoft.ivy.ant.IvyReport"/>
        <taskdef name="ivy-deliver" classname="fr.jayasoft.ivy.ant.IvyDeliver"/>

        <ivy-retrieve/>
    </target>

    <target name="ivyrep.copy-ivy" depends="init" unless="noivyxml">
        <ivy-deliver deliverpattern="${ivyrep.path}/opensymphony/${name}/[artifact]-[revision].[ext]"
                     pubrevision="${version}-${TIME}" pubdate="${TIME}"/>
    </target>

    <target name="clean" depends="common.clean">
        <delete dir="tiger/build"/>
    </target>

    <target name="compile" depends="common.compile">
    </target>

    <target name="predist" depends="tiger">
        <copy file="%{build}/${name}-tiger-${version}.jar" todir="${dist}"/>
    </target>

    <target name="tiger">
        <compile srcdir="tiger/src/java" destdir="tiger/build/java" classpath="${build.java}" source="1.5"
                 target="1.5"/>

        <jar destfile="${build}/${name}-tiger-${version}.jar">
            <fileset dir="tiger/build/java"/>
        </jar>

        <jar destfile="${build}/${name}-tiger-src-${version}.jar">
            <fileset dir="tiger/src/java"/>
        </jar>
    </target>

    <target name="tiger-test-compile" unless="skip.tests">
        <compile srcdir="tiger/src/test" destdir="tiger/build/test" classpathref="junit-tiger.cp" source="1.5"
                 target="1.5"/>

        <taskdef resource="clovertasks"/>
        <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>

        <mkdir dir="tiger/build/clover"/>
        <clover-setup initString="tiger/build/clover/coverage.db">
            <files>
                <exclude name="tiger/src/test/**/*.java"/>
            </files>
        </clover-setup>

        <compile srcdir="tiger/src/java" destdir="tiger/build/java-test" classpathref="junit-tiger.cp" source="1.5" target="1.5"/>
    </target>

    <target name="test" depends="junit-check, clover-check, compile, tiger, test-compile" description="run tests"
            unless="skip.tests">
        <run-junit />
    </target>

    <target name="tiger-test" depends="junit-check, clover-check, compile, tiger, tiger-test-compile" description="run tests"
            unless="skip.tests">
        <run-tiger-junit />
    </target>

    <target name="docs.impl" depends="common.docs.impl">
        <copy todir="${dist.docs}">
            <fileset dir="${src.java}" includes="*.dtd"/>
        </copy>
    </target>

    <target name="ivyrep" depends="common.ivyrep">
        <antcall target="ivyrep.impl" inheritrefs="no" inheritall="no">
            <param name="name" value="${name}-tiger"/>
            <param name="noivyxml" value="yes"/>
        </antcall>
    </target>

    <macrodef name="run-tiger-junit">
        <attribute name="classpathref" default="junit-tiger.cp" />
        <sequential>
          <mkdir dir="${dist.docs}/junit"/>
          <junit haltonfailure="no" haltonerror="yes" fork="yes" forkmode="once" failureproperty="test.failure">
              <jvmarg value="-Djava.awt.headless=true"/>
              <jvmarg value="-Dorg.xml.sax.driver=org.apache.crimson.parser.XMLReaderImpl"/>
              <classpath>
                  <path refid="@{classpathref}"/>
              </classpath>

              <formatter type="plain" useFile="false"/>
              <formatter type="xml"/>

              <batchtest todir="${dist.docs}/junit">
                  <fileset dir="tiger/src/test">
                      <patternset refid="src.test.pattern"/>
                  </fileset>
              </batchtest>
          </junit>
        </sequential>
    </macrodef>
</project>